@using PuiTranslate.Common.Models.Auth
@inject PuiTranslate.Services.Auth.CustomStateProvider authStateProvider
@inject NavigationManager navManager;
<div class="app-container">
    <div class="login-content">
        <div class="login">
            <EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="loginRequest">
                <DataAnnotationsValidator />

                <label for="inputUsername" class="sr-only">Username</label>
                <InputText id="inputUsername" class="form-control" @bind-Value="loginRequest.UserName" autofocus placeholder="Username" />
                <ValidationMessage For="@(() => loginRequest.UserName)" />

                <label for="inputPassword" class="sr-only">Password</label>
                <InputText type="password" id="inputPassword" class="form-control" placeholder="Password" @bind-Value="loginRequest.Password" />
                <ValidationMessage For="@(() => loginRequest.Password)" />

                <button class="btn btn-lg btn-primary btn-block" type="submit">Sign in</button>

                <label class="text-danger">@error</label>
            </EditForm>
        </div>
    </div>
</div>
@code {
    LoginRequest loginRequest { get; set; } = new LoginRequest();
    string error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Login(loginRequest);
            navManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}
